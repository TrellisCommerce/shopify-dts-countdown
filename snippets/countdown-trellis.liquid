{% liquid
  if type == 'section'
    assign main_container_classes = 'twcss-w-screen twcss-flex twcss-justify-center twcss-items-center twcss-flex-col twcss-max-w-full twcss-section-pt twcss-px-[20px] md:twcss-px-[52px] twcss-pb-[40px] twcss-pt-[30px] md:twcss-pt-[85px]'
    assign countdown_wrapper_classes = 'twcss-max-w-[280px] md:twcss-max-w-none twcss-flex twcss-align-center twcss-justify-center sm:twcss-justify-between md:twcss-justify-center twcss-flex-wrap'
    assign increment_container_classes = 'twcss-border-[3px] twcss-mb-[55px] md:twcss-mb-0 twcss-min-w-[126px] twcss-min-h-[126px] twcss-px-[18px] twcss-pt-[25px] twcss-pb-[20px] md:twcss-mr-[39px] twcss-relative twcss-opacity-0'
    assign increment_text_classes = 'twcss-text-[70px] md:twcss-text-[75px] twcss-leading-none twcss-w-[84px] twcss-text-right'
    assign increment_label_classes = 'twcss-body20 twcss-pt-[10px] twcss-absolute -twcss-translate-x-1/2 twcss-left-1/2 twcss-bottom-[-43px]'
  elsif type == 'block'
    assign main_container_classes = ''
    assign countdown_wrapper_classes = 'twcss-flex twcss-justify-center twcss-py-2'
    assign increment_container_classes = 'twcss-flex'
    assign increment_text_classes = ''
    assign increment_label_classes = ''
    endif

  if data.date
    assign date = data.date
  endif
%}

<div class="{{ main_container_classes }}" style="background-color: {{ data.bkg_color }} ">
  {% if type == 'section' %}
    {% if data.title != blank %}
      <h2 class="twcss-text-center twcss-text-[65px] md:twcss-text-[75px] twcss-leading-0 twcss-pb-[30px]" style="color: {{ data.content_color }}">
        {{ data.title }}
      </h2>
    {% endif %}
    {% if data.description != blank %}
      <div class="twcss-text-center twcss-pb-[30px] twcss-mx-auto twcss-max-w-screen-xlg md:twcss-px-[10%]" style="color: {{ data.content_color }}">
        {{ data.description }}
      </div>
    {% endif %}
  {% endif %}

    <div id="countdown-wrapper-{{ identifier | split: ' ' | join: '' }}" class="{{ countdown_wrapper_classes }}">
        {% if type == 'block' %}
          <span style="color: {{ data.content_color }}; ">
            ON SALE for&nbsp;
          </span>
        {% endif %}
        <div id="days-{{ identifier | split: ' ' | join: '' }}" class="{{ increment_container_classes }} {% unless data.show_days %}twcss-hidden{% endunless %}" style="border-color:{{ data.content_color }}">
          <p class="{{ increment_text_classes }}" style="color: {{ data.content_color }}"></p>
          <span class="{{ increment_label_classes }}" style="color: {{ data.content_color }}">
            {% if type == 'section' %}Days{% else %}&nbsp;Days&nbsp;{% endif %}
            </span>
        </div>
        <div id="hours-{{ identifier | split: ' ' | join: '' }}" class="{{ increment_container_classes }} {% unless data.show_hours %}twcss-hidden{% endunless %}" style="border-color:{{ data.content_color }}">
          <p class="{{ increment_text_classes }}" style="color: {{ data.content_color }}"></p>
          <span class="{{ increment_label_classes }}" style="color: {{ data.content_color }}">
            {% if type == 'section' %}Hours{% else %}:{% endif %}
          </span>
        </div>
        <div id="minutes-{{ identifier | split: ' ' | join: '' }}" class="{{ increment_container_classes }} {% unless data.show_minutes %}twcss-hidden{% endunless %}" style="border-color:{{ data.content_color }}">
          <p class="{{ increment_text_classes }}" style="color: {{ data.content_color }}"></p>
          <span class="{{ increment_label_classes }}" style="color: {{ data.content_color }}">
            {% if type == 'section' %}Minutes{% else %}:{% endif %}
          </span>
        </div>
        <div id="seconds-{{ identifier | split: ' ' | join: '' }}" class="{{ increment_container_classes }} {% unless data.show_seconds %}twcss-hidden{% endunless %}" style="border-color:{{ data.content_color }}">
          <p class="{{ increment_text_classes }}" style="color: {{ data.content_color }}"></p>
          <span class="{{ increment_label_classes }}" style="color: {{ data.content_color }}">
            {% if type == 'section' %}Seconds{% endif %}
          </span>
        </div>
    </div>
</div>

<script>
// run below function
runme()

  // create a function to contain below variables within scope
function runme() {

  // Set the date we're counting down to
  const countDownDate = new Date("{{ date }}").getTime();
  const now = new Date().getTime();
  const temp = "{{ identifier | split: ' ' | join: '' }}"
  const distance = countDownDate - now

  if (distance < 0) {

    document.getElementById(`countdown-wrapper-${temp}`).innerHTML = '<div class="twcss-h4" style="color:{{ data.countdown_content_color }}">{{ data.expired_text }}</div>';

  } else {

    document.getElementById(`days-${temp}`).classList.remove('twcss-opacity-0');
    document.getElementById(`hours-${temp}`).classList.remove('twcss-opacity-0');
    document.getElementById(`minutes-${temp}`).classList.remove('twcss-opacity-0');
    document.getElementById(`seconds-${temp}`).classList.remove('twcss-opacity-0');

    // Update the count down every 1 second
    var x = setInterval(function() {

      // Time calculations for days, hours, minutes and seconds
      const days = (`${temp}-days`, Math.floor(distance / (1000 * 60 * 60 * 24)))
      const hours = (`${temp}-hours`, Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)))
      const minutes = (`${temp}-minutes`, Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60)))
      const seconds = (`${temp}-seconds`, Math.floor((distance % (1000 * 60)) / 1000))


      // Display the result in the elements
      document.querySelector(`#days-${temp} p`).innerHTML = days.toLocaleString('en-US', {minimumIntegerDigits: 2, useGrouping:false});
      document.querySelector(`#hours-${temp} p`).innerHTML = hours.toLocaleString('en-US', {minimumIntegerDigits: 2, useGrouping:false});
      document.querySelector(`#minutes-${temp} p`).innerHTML = minutes.toLocaleString('en-US', {minimumIntegerDigits: 2, useGrouping:false});
      document.querySelector(`#seconds-${temp} p`).innerHTML = seconds.toLocaleString('en-US', {minimumIntegerDigits: 2, useGrouping:false});

      // If the count down is finished, write some text
      if (distance < 0) {
        clearInterval(x);
        document.getElementById(`countdown-wrapper-${temp}`).innerHTML = '<div class="twcss-h4" style="color:{{ data.countdown_content_color }}" >{{ data.expired_text }}</div>';
      }
    }, 1000);

  }
}
</script>
